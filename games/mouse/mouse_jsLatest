// mouse.js
document.addEventListener("DOMContentLoaded", () => {
  const questionContainer = document.getElementById("question-container");
  const feedback = document.getElementById("feedback");
  const nextButton = document.getElementById("next-btn");

  // Read URL parameters
  const urlParams = new URLSearchParams(window.location.search);
  const topicName = urlParams.get("topic") || "Mouse Practice";
  const year = parseInt(urlParams.get("year")) || 1;

  // Progressive exercises per year
  const yearExercises = {
    1: [
      { type: "click", x: 100, y: 100, target: "😊", description: "Click the smiling emoji 😊" },
      { type: "click", x: 300, y: 150, target: "⭐", description: "Click the star ⭐" },
      { type: "click", x: 200, y: 250, target: "❤️", description: "Click the heart ❤️" },
      { type: "click", x: 400, y: 300, target: "😎", description: "Click the cool emoji 😎" },
      { type: "click", x: 150, y: 400, target: "👍", description: "Click the thumbs up 👍" }
    ],
    2: [
      { type: "click", x: 120, y: 120, target: "🔥", description: "Click the fire emoji 🔥" },
      { type: "click", x: 350, y: 150, target: "🍎", description: "Click the apple 🍎" },
      { type: "click", x: 200, y: 300, target: "⚡", description: "Click the lightning ⚡" },
      { type: "click", x: 400, y: 250, target: "🎵", description: "Click the music 🎵" },
      { type: "click", x: 150, y: 420, target: "🌟", description: "Click the glowing star 🌟" }
    ],
    3: [
      { type: "double", x: 100, y: 100, target: "📁", description: "Double-click the folder 📁" },
      { type: "double", x: 300, y: 150, target: "📂", description: "Double-click the open folder 📂" },
      { type: "double", x: 200, y: 250, target: "📄", description: "Double-click the document 📄" },
      { type: "double", x: 400, y: 300, target: "📝", description: "Double-click the notepad 📝" },
      { type: "double", x: 150, y: 400, target: "⭐", description: "Double-click the star ⭐" }
    ],
    4: [
      { type: "drag", x: 100, y: 100, target: "⭐", description: "Drag the star ⭐ into the box" },
      { type: "drag", x: 300, y: 150, target: "⚪", description: "Drag the circle ⚪ into the target area" },
      { type: "drag", x: 200, y: 250, target: "❤️", description: "Drag the heart ❤️ into the box" },
      { type: "drag", x: 400, y: 300, target: "😎", description: "Drag the cool emoji 😎 to the box" },
      { type: "drag", x: 150, y: 400, target: "👍", description: "Drag the thumbs up 👍 into the target" }
    ],
    5: [
      { type: "drag", x: 150, y: 100, target: "🍎", description: "Drag the apple 🍎 to the basket" },
      { type: "drag", x: 350, y: 200, target: "🍌", description: "Drag the banana 🍌 to the basket" },
      { type: "drag", x: 200, y: 250, target: "🍒", description: "Drag the cherry 🍒 to the basket" },
      { type: "drag", x: 400, y: 300, target: "🍇", description: "Drag the grapes 🍇 to the basket" },
      { type: "drag", x: 100, y: 400, target: "🍉", description: "Drag the watermelon 🍉 to the basket" }
    ],
    6: [
      { type: "right", x: 150, y: 150, target: "📁", description: "Right-click the folder 📁 to open menu" },
      { type: "right", x: 300, y: 200, target: "⭐", description: "Right-click the star ⭐ to open menu" },
      { type: "right", x: 200, y: 300, target: "📝", description: "Right-click the notepad 📝 to open menu" },
      { type: "right", x: 400, y: 250, target: "📄", description: "Right-click the document 📄 to open menu" },
      { type: "right", x: 100, y: 400, target: "❤️", description: "Right-click the heart ❤️ to open menu" }
    ],
    // Years 7–12 progressively combine double, right, drag and click with desktop workflow
    7: [
      { type: "double", x: 150, y: 150, target: "📁", description: "Double-click the folder 📁 to open" },
      { type: "drag", x: 300, y: 200, target: "⭐", description: "Drag the star ⭐ to the target" },
      { type: "right", x: 200, y: 300, target: "📝", description: "Right-click the notepad 📝" }
    ],
    8: [
      { type: "double", x: 100, y: 100, target: "📂", description: "Double-click the open folder 📂" },
      { type: "drag", x: 350, y: 200, target: "📄", description: "Drag the document 📄 to folder" },
      { type: "right", x: 200, y: 250, target: "📝", description: "Right-click the notepad 📝" }
    ],
    9: [
      { type: "double", x: 150, y: 150, target: "📁", description: "Double-click the folder 📁" },
      { type: "drag", x: 300, y: 200, target: "⭐", description: "Drag the star ⭐ to target" },
      { type: "right", x: 200, y: 300, target: "📝", description: "Right-click the notepad 📝" }
    ],
    10: [
      { type: "drag", x: 100, y: 100, target: "📁", description: "Create a new folder: drag 📁 to desktop" },
      { type: "drag", x: 350, y: 200, target: "📂", description: "Add subfolder: drag 📂 into parent" }
    ],
    11: [
      { type: "drag", x: 200, y: 100, target: "📁", description: "Move folder 📁 to correct location" },
      { type: "right", x: 300, y: 200, target: "📂", description: "Right-click subfolder 📂" }
    ],
    12: [
      { type: "drag", x: 150, y: 150, target: "📁", description: "Final project: create folder, add subfolders, rename, delete" }
    ]
  };

  let exercises = yearExercises[year] || [];
  let currentExerciseIndex = 0;

  function showExercise() {
    feedback.textContent = "";
    nextButton.classList.add("hidden");

    if (currentExerciseIndex >= exercises.length) {
      questionContainer.innerHTML = `
        <h2>🎉 Congratulations! You completed Year ${year} "${topicName}" practice.</h2>
        <div class="flex gap-3 mt-4">
          <button id="restart-btn" style="padding:10px 15px;border-radius:8px;background:#4b3f72;color:#fff;cursor:pointer;">Restart</button>
          <button id="back-btn" style="padding:10px 15px;border-radius:8px;background:#555;color:#fff;cursor:pointer;">Back to Classes</button>
          <button id="home-btn" style="padding:10px 15px;border-radius:8px;background:#888;color:#fff;cursor:pointer;">Home</button>
        </div>
      `;

      document.getElementById("restart-btn").onclick = () => {
        currentExerciseIndex = 0;
        showExercise();
      };
      document.getElementById("back-btn").onclick = () => {
        window.location.href = "https://slide-t.github.io/smart-learningkids/classes.html";
      };
      document.getElementById("home-btn").onclick = () => {
        window.location.href = "https://slide-t.github.io/smart-learningkids/index.html";
      };
      return;
    }

    const exercise = exercises[currentExerciseIndex];

    questionContainer.innerHTML = `
      <h2>Year ${year} ${topicName} Exercise ${currentExerciseIndex + 1}/${exercises.length}</h2>
      <p>${exercise.description}</p>
      <div style="width:100%;height:400px;position:relative;border:2px dashed #ccc;margin-top:20px;" id="exercise-area">
        <button id="target-btn" style="
          position:absolute;
          top:${exercise.y}px;
          left:${exercise.x}px;
          padding:10px 15px;
          border-radius:8px;
          cursor:pointer;
        ">${exercise.target}</button>
      </div>
    `;

    const targetBtn = document.getElementById("target-btn");

    const handleEvent = (e) => {
      e.preventDefault();
      if (
        (exercise.type === "click" && e.type === "click") ||
        (exercise.type === "double" && e.type === "dblclick") ||
        (exercise.type === "right" && e.type === "contextmenu")
      ) {
        feedback.textContent = "✅ Correct!";
        feedback.style.color = "green";
        currentExerciseIndex++;
        setTimeout(showExercise, 800);
      } else {
        feedback.textContent = "❌ Wrong! Try again.";
        feedback.style.color = "red";
      }
    };

    if (exercise.type === "click") targetBtn.addEventListener("click", handleEvent);
    if (exercise.type === "double") targetBtn.addEventListener("dblclick", handleEvent);
    if (exercise.type === "right") targetBtn.addEventListener("contextmenu", handleEvent);

    if (exercise.type === "drag") {
      targetBtn.setAttribute("draggable", true);
      const exerciseArea = document.getElementById("exercise-area");
      const dropZone = document.createElement("div");
      dropZone.style = `
        position:absolute;
        width:100px;
        height:100px;
        border:2px dashed green;
        top:${exercise.y + 50}px;
        left:${exercise.x + 50}px;
      `;
      exerciseArea.appendChild(dropZone);

      targetBtn.addEventListener("dragstart", (e) => {
        e.dataTransfer.setData("text/plain", "drag");
      });

      dropZone.addEventListener("dragover", (e) => e.preventDefault());
      dropZone.addEventListener("drop", (e) => {
        e.preventDefault();
        feedback.textContent = "✅ Correct Drag!";
        feedback.style.color = "green";
        currentExerciseIndex++;
        setTimeout(showExercise, 800);
      });
    }
  }

  showExercise();
});
